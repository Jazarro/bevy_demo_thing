[package]
name = "dwarf_seeks_fortune"
version = "0.2.0"
authors = ["Jazarro"]
edition = "2021"

# Enable only a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

[workspace]
resolver = "2" # Important! wgpu/Bevy needs this!

members = [
    # Contains all the core game code.
    "dsf_core",
    # Contains all code partaining to the level editor.
    "dsf_editor",
    # Contains all code partaining to the automated checks.
    # This crate is not currently in use, but will in time become a separate binary crate.
    # The plan is for it to simulate game play to do various things like prove levels are solvable and prove that
    # players can or can not make certain jumps.
    #    "dsf_checks",
]

[dependencies]

dsf_core = { path = "dsf_core" }
dsf_editor = { path = "dsf_editor" }

env_logger = "0.8.3"
#log = { version = "0.4.6", features = [] }
serde = { version = "1.0", features = ["derive"] }
ron = "*"
rand = "*"
iyes_loopless = "0.6.*"
bevy_kira_audio = "0.10.*"

[dependencies.bevy]
version = "0.7.*"
# Disable the default features if there are any that you do not want
default-features = false
features = [
    # These are the default features:
    # (re-enable whichever you like)

    # Bevy functionality:
#    "animation",          # Animation support
#    "bevy_gilrs",         # Gamepad input support
#    "bevy_audio",         # Builtin audio
    "bevy_winit",         # Window management
    "x11",                # Linux: Support X11 windowing system
#    "filesystem_watcher", # Asset hot-reloading
#    "render",             # Graphics Rendering

    ## "render" actually just includes:
    ## (feel free to use just a subset of these, instead of "render")
    "bevy_render",        # Rendering framework core
    "bevy_core_pipeline", # Higher-level rendering abstractions
    "bevy_sprite",        # 2D (sprites) rendering
#    "bevy_pbr",           # 3D (physically-based) rendering
#    "bevy_gltf",          # GLTF 3D assets format support
    "bevy_text",          # Text/font rendering
    "bevy_ui",            # UI toolkit

    # File formats:
    "png",
#    "hdr",
#    "vorbis",

    # These are other features that may be of interest:
    # (add any of these that you need)

    # Bevy functionality:
    "wayland",              # Linux: Support Wayland windowing system
    "subpixel_glyph_atlas", # Subpixel antialiasing for text/fonts
    "serialize",            # Support for `serde` Serialize/Deserialize

    # File formats:
#    "ktx2", # preferred format for GPU textures
#    "dds",
#    "jpeg",
#    "bmp",
#    "tga",
#    "basis-universal",
#    "zstd", # needed if using zstd in KTX2 files
#    "flac",
#    "mp3",
#    "wav",

    # Development/Debug features:
#    "dynamic",      # Dynamic linking for faster compile-times
#    "trace",        # Enable tracing for performance measurement
#    "trace_tracy",  # Tracing using `tracy`
#    "trace_chrome", # Tracing using the Chrome format
#    "wgpu_trace",   # WGPU/rendering tracing
]
